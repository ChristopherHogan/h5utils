# Process this file with autoconf to produce a configure script.
AC_INIT(h5topng.c)
AC_CONFIG_HEADER(config.h)

VERSION=1.3
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
AC_SUBST(VERSION)

# Checks for programs.
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_RANLIB

# check how to transform the name of the installed program:
AC_ARG_PROGRAM

# Checks for header files.
AC_HEADER_STDC

AC_CHECK_LIB(m, sqrt)

###########################################################################

H5TOPNG_TARGET=h5topng
PNG_LIBS=""

AC_CHECK_LIB(z, inflate, ok=yes, ok=no)
if test "$ok" = "yes"; then
	LIBS="-lz $LIBS"

	AC_CHECK_LIB(png, png_create_write_struct, ok=yes, ok=no)
	if test "$ok" = "yes"; then
		PNG_LIBS="-lpng"
	else
		AC_MSG_WARN([can't find libpng: won't be able to compile h5topng])
		H5TOPNG_TARGET=""
	fi
else
	AC_MSG_WARN([can't find libz: won't be able to compile h5topng])
	H5TOPNG_TARGET=""
fi

AC_SUBST(H5TOPNG_TARGET)
AC_SUBST(PNG_LIBS)

###########################################################################

AC_CHECK_LIB(hdf5, H5Fopen, LIBS="-lhdf5 $LIBS",
	     AC_MSG_ERROR([hdf5 libraries are required for compilation]))

###########################################################################

H5READ_TARGET=h5read.oct
OCT_INSTALL_DIR=""
H5READ_INSTALL_TARGET=""
H5READ_UNINSTALL_TARGET=""
AC_CHECK_PROGS(MKOCTFILE, mkoctfile, echo)
if test "$MKOCTFILE" = "echo"; then
	AC_MSG_WARN([can't find mkoctfile: won't be able to compile h5read.oct])
	H5READ_TARGET=""
else
	# try to find installation directory
	AC_CHECK_PROGS(OCTAVE, octave, echo)
	AC_MSG_CHECKING(where octave plugins go)
	OCT_INSTALL_DIR=`echo "DEFAULT_LOADPATH" | $OCTAVE -q | tr ':' '\n' | grep "site/oct" | head -1`
	if test -n "$OCT_INSTALL_DIR"; then
		H5READ_INSTALL_TARGET="h5read-install"
		H5READ_UNINSTALL_TARGET="h5read-uninstall"
		AC_MSG_RESULT($OCT_INSTALL_DIR)
	else
		AC_MSG_RESULT(unknown)
	fi
fi

AC_SUBST(H5READ_TARGET)
AC_SUBST(OCT_INSTALL_DIR)
AC_SUBST(H5READ_INSTALL_TARGET)
AC_SUBST(H5READ_UNINSTALL_TARGET)

###########################################################################

AC_ARG_WITH(v5d, [  --with-v5d=<dir>        use Vis5d in <dir> for h5tov5d], ok=$withval, ok=no)
H5TOV5D_TARGET=""
V5D_FILES=""
V5D_INCLUDES=""
if test "$ok" != "no"; then
	AC_MSG_CHECKING(for Vis5d object files and headers)
	if test -r "$ok/src/v5d.o" -a -r "$ok/src/binio.o" -a -r "$ok/src/v5d.h" -a -r "$ok/src/binio.h"; then
		V5D_FILES="$ok/src/v5d.o $ok/src/binio.o"
		V5D_INCLUDES="-I$ok/src"
	elif test -r "$ok/v5d.o" -a -r "$ok/binio.o" -a -r "$ok/v5d.h" -a -r "$ok/binio.h"; then
		V5D_FILES="$ok/v5d.o $ok/binio.o"
		V5D_INCLUDES="-I$ok"
	fi
	if test -z "$V5D_FILES"; then
		AC_MSG_RESULT(not found)
		AC_MSG_ERROR(couldn't read Vis5D object files in $ok)
	else
		AC_MSG_RESULT(found)
	fi
	H5TOV5D_TARGET=h5tov5d
fi
AC_SUBST(H5TOV5D_TARGET)
AC_SUBST(V5D_FILES)
AC_SUBST(V5D_INCLUDES)

###########################################################################

AC_OUTPUT(Makefile)
